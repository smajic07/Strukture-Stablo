Funkcija Unija poziva funkciju UnijaRekuzivno koja rekurzivno pronalazi uniju stabala koje je primila
kao parametre, a ta stabla nemaju istih elemenata. Najlakši način da se ovo uradi jeste da se u veće 
od ova dva stabla ubacuju/insertuju elementi drugog stabla, te to vratimo kao rezultat funkcije, tada bi
složenost funkcije bila mO(logn), gdje je m veličina manjeg stabla, a n veličina većeg stabla.
Naravno n bi se povečavalo prilikom svakog Inserta, ali bi taj rast bio logaritamski.

Međutim ono što je rečeno da implementirano uzima sljedeću složenost:

Pošto razdvajanje pozivamo u skoro svakoj iteraciji, u najgorem slučaju u n-1 iteraciji, gdje je 
n broj iteracija, iteracijom smatramo rekurzivni poziv ove funkcije.
Funkcija prima Stabla po referenci,što neće uticati na brzinu programa. 
Razdvajanje je O(logm), gdje je m veličia stabla koje razdvajamo, međutim m se smanjuje što više 
iteracija pravimo tj. idući ka "dnu" rekurzije.
Vršimo i spajanje u većini iteracija, a spajanje uzima O(b) gdje je b veličina produkta stabala koje
spajamo. Za iteracije koje predstavljaju rekurzivno "dno" b je malo, međutim "penjući se" prema gornjim
iteracijama b je e+t, gdje je e broj elemenata s1 stabla, a t broj elemenata s2 stabla.
Uvijek se pozivaju pomjerajući konstruktor, te pomjerajući operator dodjele, tako da oni ne utiču na
složenost.
Zaključak je da je složenost: (n-1)(O(logM)+O(B)), gdje se M smanjuje idući ka "dnu" rekurzije, a B
raste idući od "dna" ka gore.